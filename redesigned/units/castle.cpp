#include "castle.h"
#include "tower.h"
#include <string>

using namespace std;

//old ctor - Callum
Castle::Castle(int uid, Point pos, int hp, int atkdmg, int atkrng,
    int atkspd, int percep, int atkcnt, int wall, int cid):
    Tower(uid, pos, hp, atkdmg, atkrng, atkspd, percep, atkcnt, wall), 
    clientID_(cid)
{
    // validation
}

/*------------------------------------------------------------------------------
-- FUNCTION:    Creep - constructor
--
-- DATE:        March 26, 2013
--
-- DESIGNER:    Kevin Tangeman
-- PROGRAMMER:  Kevin Tangeman
--
-- INTERFACE:   Creep(int uid, int side, Point pos, Point* path, int hp = 100, int atkdmg = 10, int atkrng = 10,
                      int atkspd = 10, int percep = 10, int atkcnt = 30, int movespeed = 10,
                      Direct direct = Direction())

                uid: unit id generated by the server
                pos: starting position when you call the ctor
                path: pointer to all the points for the creeps pathing
--
-- RETURNS:     a new Creep object
--
-- DESCRIPTION: Creates a new Creep object.  Default values are given.
--              
--              The unit id must be specified, it is generated server side.
--              
--              The starting position must be specified, this should be the first value
--              of the path it is in.
--              
--              The *path must be specified, this stores the points for the lane that the
--              creep will move through.
------------------------------------------------------------------------------*/
Castle::Castle(int uid, int cid, int side, Point pos, int hp, int atkdmg, int atkrng,
    int atkspd, int percep, int atkcnt, int wall):
    Tower(uid, side, pos, hp, atkdmg, atkrng, atkspd, percep, atkcnt, wall), 
    clientID_(cid)
{
    // validation
}
